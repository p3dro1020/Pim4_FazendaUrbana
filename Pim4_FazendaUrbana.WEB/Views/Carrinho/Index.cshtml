@model IEnumerable<Pim4_FazendaUrbana.DATA.Models.Produto>

<!DOCTYPE html>
<html lang="pt-br">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
    <link rel="stylesheet" href="~/css/styleCompras.css">

</head>
<body>

    <div class="menu-wrapper">
        <div class="menu-container">
            @foreach(var item in Model)
            {
                <div class="menu-item">
                <img src="~/lib/images/repolhoroxo.png" alt="name produto" class="menu-image">
                <h3 class="menu-name">@item.Nome</h3>
                <p class="menu-price">R$ @item.ValorUn</p>
                <button class="menu-button" 
                        data-id="@item.IdProduto" 
                        data-nome="@item.Nome" 
                        data-valor="@item.ValorUn">
                    Adicionar ao Carrinho
                </button>                
                </div>
            }
        </div>
    </div>
</body>
</html>

<script>
document.addEventListener('DOMContentLoaded', () => {
    const cartCountElement = document.querySelector('.cart-count');
    const carrinho = []; 

    document.querySelectorAll('.menu-button').forEach(button => {
        button.addEventListener('click', () => {
            const idProduto = parseInt(button.getAttribute('data-id'));  // Conversão para inteiro
            const nomeProduto = button.getAttribute('data-nome');
            const valorProduto = parseFloat(button.getAttribute('data-valor'));  // Conversão para número decimal

            // Verifica se o item já está no carrinho
            const itemExistente = carrinho.find(item => item.id === idProduto);
            if (itemExistente) {
                alert(`O produto "${nomeProduto}" já está no carrinho!`);
                return;
            }

            // Adiciona o item ao carrinho
            carrinho.push({ id: idProduto, nome: nomeProduto, valor: valorProduto });

            // Incrementa o contador no carrinho
            if (cartCountElement) {
                let currentCount = parseInt(cartCountElement.textContent) || 0;
                currentCount += 1;
                cartCountElement.textContent = currentCount;
            }

            fetch('@Url.Action("AddToCart", "Carrinho")', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'RequestVerificationToken': $('input[name="__RequestVerificationToken"]').val() // Token CSRF, se necessário
                },
                body: JSON.stringify({
                    productId: idProduto,
                    productName: nomeProduto,
                    productPrice: valorProduto
                })
            })
            .then(response => response.json())  // Esperando resposta JSON do controlador
            .then(data => {
                if (data.success) {
                    alert('Produto adicionado ao carrinho!');
                } else {
                    alert('Erro ao adicionar o produto.');
                }
            })  

        });
    });
});




</script>